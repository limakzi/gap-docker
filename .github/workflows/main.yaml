---
name: build and push docker image

on:
  pull_request: 
    paths:
      - '.github/**'
      - 'src/dockerfiles/**'
    branches: 
      - main
  schedule:
      - cron: '30 10 * * 1'
  push:
    paths:
      - '.github/**'
      - 'src/dockerfiles/**'
    branches: 
      - main

jobs:
  docker-image-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      fail-fast: true
      matrix:
        image:
          - ubuntu2204
        gap-build:
          - full
          - slim
        gap-version:
          - 4.13.1
          - 4.13.0
          - 4.13.0-alpha2
          - 4.13.0-alpha1
          - 4.12.2
          - 4.12.1
          - 4.12.0
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: 👨‍💻 git -- checkout
        uses: actions/checkout@v4

      - name: 📋 meta -- prepare platform-key
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_KEY=${platform//\//-}" >> $GITHUB_ENV

      - name: 🐬 docker -- metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          labels: |
            org.opencontainers.image.authors=Kamil Zabielski
            org.opencontainers.image.title=gap
          images: |
            name=ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ matrix.gap-version }}-${{ matrix.image }}-${{ matrix.gap-build }}

      - name: 📦 docker -- login to ghcr-registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 💻 quemu -- setup
        uses: docker/setup-qemu-action@v3

      - name: 🐬 docker -- setup buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐬 docker -- build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./src/dockerfiles/${{ matrix.image }}
          file: ./src/dockerfiles/${{ matrix.image }}/Dockerfile
          platforms: ${{ matrix.platform }}
          push: ${{ ! github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max`
          build-args: |
            PLATFORM=${{ matrix.platform }}
            GAP_BUILD=${{ matrix.gap-build }}
            GAP_VERSION=${{ matrix.gap-version }}

      - name: 🐬 docker -- export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}" 

      - name: 👨‍💻 github -- upload digests
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_KEY }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  docker-merge:
    runs-on: ubuntu-latest
    if: ${{ ! github.event_name == 'pull_request' }}
    environment: gap-docker
    needs:
      - docker-image-build
    steps:
      - name: 👨‍💻 github -- download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
          
      - name: 🐬 docker -- setup buildx
        uses: docker/setup-buildx-action@v3
          
      - name: 🐬 docker -- metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/${{ github.repository }}
          
      - name: 📦 docker -- login to ghcr-registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🎮 docker -- create manifest and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository }}@sha256:%s ' *)          
          
      - name: 🎮 docker -- inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}